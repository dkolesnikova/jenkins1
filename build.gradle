plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
}
group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}


dependencies {
    testImplementation (
            "com.github.javafaker:javafaker:1.0.2",
            "com.codeborne:selenide:6.7.2",
            "io.qameta.allure:allure-selenide:2.19.0",
            "org.junit.jupiter:junit-jupiter:5.9.1",
            "org.slf4j:slf4j-simple:1.7.32",
            "org.aspectj:aspectjweaver:1.9.9.1",
            'org.seleniumhq.selenium:selenium-java:3.141.59',
            'io.github.bonigarcia:webdrivermanager:5.2.1',
            'org.aeonbits.owner:owner:1.0.4',
            'org.assertj:assertj-core:3.23.1'
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')
}

test {
    useJUnitPlatform()
    //-PbaseUrl=https://github.com -Pbrowser=FIREFOX
    systemProperties(System.getProperties())
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke_tests(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}
task one_property_test(type: Test) {
    useJUnitPlatform {
        includeTags("one_property")
    }
}
task hello_test(type: Test) {
    useJUnitPlatform {
        includeTags("hello")
    }
}
    task form_test(type: Test) {
        useJUnitPlatform {
            includeTags("form_test")
        }
    }
    help {
        doFirst {
            println ""
            println "************************************************************************ "
            println "***                                                                  *** "
            println "*** Welcome to https://github.com/qa-guru/demoqa-test-16!            *** "
            println "***                                                                  *** "
            println "*** ./gradlew help                                                   *** "
            println "***                                                                  *** "
            println "************************************************************************ "
            println ""
        }
    }
